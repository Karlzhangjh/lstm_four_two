# -*- coding: utf-8 -*-
 
from __future__ import print_function
    
#import tf
import time
import warnings
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

import random
from math import sqrt
from numpy import concatenate
from pandas import DataFrame
from pandas import concat
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error
from keras.layers.core import Dense,Activation,Dropout
from keras.layers.recurrent import LSTM
from keras.models import Sequential,load_model

if __name__ == '__main__':
	
	a = [[1,2],[3,2],[4,6],[7,2]]
	a = np.array(a)
	
	scaler = MinMaxScaler(feature_range = (0,1)) #it will be better if split to several section
	scaled_data = scaler.fit_transform(a) #(,6)

	print(a)
	print(scaled_data)

	scaled_data = scaled_data[1:3,:]
	b = [[0.2,0.1]]

	re_data = concatenate((scaled_data,b),axis=0)
	print(re_data)
	re_data = scaler.inverse_transform(re_data)
	print(re_data)

	input = [[14.900936126708984,-0.3072899580001831,-0.45719367265701294,-0.00018134104902856052],
	[14.880328178405762,-0.2817583382129669,-0.44569748640060425,-0.0002478625101502985],
	[14.847033500671387,-0.2702173590660095,-0.42701104283332825,-0.0011573004303500056],
	[14.800742149353027,-0.24197040498256683,-0.4136403799057007,-0.0034908712841570377],
	[14.747754096984863,-0.20110110938549042,-0.39106282591819763,-0.004100644960999489],
	[14.69748306274414,-0.17054730653762817,-0.3680441975593567,-0.004257105756551027],
	[14.649885177612305,-0.1547924429178238,-0.3449624478816986,-0.0047998917289078236],
	[14.612407684326172,-0.14370453357696533,-0.3267240822315216,-0.005080684553831816],
	[14.565342903137207,-0.12986838817596436,-0.3069870173931122,-0.0044813151471316814],
	[14.53187084197998,-0.13159972429275513,-0.272495836019516,-0.0033145283814519644],
	[14.518220901489258,-0.13640078902244568,-0.23333893716335297,-0.0014161539729684591],
	[14.498723030090332,-0.13275398313999176,-0.20562049746513367,-0.000669070752337575],
	[14.475351333618164,-0.13127531111240387,-0.1807514727115631,-0.0006104772910475731],
	[14.469170570373535,-0.13765588402748108,-0.14550051093101501,0.0005646329373121262],
	[14.471479415893555,-0.1438756287097931,-0.08951394259929657,0.0035874301102012396],
	[14.47757339477539,-0.1468716710805893,-0.03633914142847061,0.005523295607417822],
	[14.487256050109863,-0.146312415599823,0.02003718912601471,0.007119690999388695],
	[14.49159049987793,-0.14584726095199585,0.08539550006389618,0.008989161811769009],
	[14.49010181427002,-0.14196546375751495,0.14023378491401672,0.009904530830681324],
	[14.515379905700684,-0.14664381742477417,0.2138351947069168,0.012141942977905273]]

	input = np.array(input)
	print(input.shape)
	print(input)
